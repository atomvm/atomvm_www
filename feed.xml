<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://www.atomvm.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.atomvm.net/" rel="alternate" type="text/html" /><updated>2025-06-14T18:50:12+00:00</updated><id>https://www.atomvm.net/feed.xml</id><title type="html">AtomVM</title><subtitle>Welcome to AtomVM, the Erlang virtual machine for IoT devices!</subtitle><author><name>atomvm.net</name></author><entry><title type="html">Emergency bug fix release `atomvm_rebar3_plugin 0.7.5` has been published</title><link href="https://www.atomvm.net/2025/05/27/rebar3_plugin.html" rel="alternate" type="text/html" title="Emergency bug fix release `atomvm_rebar3_plugin 0.7.5` has been published" /><published>2025-05-27T00:00:00+00:00</published><updated>2025-05-27T00:00:00+00:00</updated><id>https://www.atomvm.net/2025/05/27/rebar3_plugin</id><content type="html" xml:base="https://www.atomvm.net/2025/05/27/rebar3_plugin.html">&lt;h2 id=&quot;20250527-emergency-bug-fix-release-atomvm_rebar3_plugin-075-is-available&quot;&gt;2025/05/27 Emergency bug fix release &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin 0.7.5&lt;/code&gt; is available&lt;/h2&gt;

&lt;p&gt;We have released &lt;a href=&quot;https://github.com/atomvm/atomvm_rebar3_plugin/releases/tag/0.7.5&quot;&gt;atomvm_rebar3_plugin 0.7.5&lt;/a&gt;
as an emergency bug fix for the broken dependencies when pulling
&lt;a href=&quot;https://hex.pm/packages/atomvm_rebar3_plugin&quot;&gt;atomvm_rebar3_plugin from hex.pm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This was due to the uf2tool dependency source from the GitHub tag rather than the hex package.
Apologies to anyone who tried to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin 0.7.4&lt;/code&gt; release from hex.pm.&lt;/p&gt;

&lt;p&gt;There are no other changes or feature additions, just a working package this time ;-).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- the AtomVM team&lt;/em&gt;&lt;/p&gt;</content><author><name>The AtomVM Team</name></author><summary type="html">2025/05/27 Emergency bug fix release atomvm_rebar3_plugin 0.7.5 is available We have released atomvm_rebar3_plugin 0.7.5 as an emergency bug fix for the broken dependencies when pulling atomvm_rebar3_plugin from hex.pm. This was due to the uf2tool dependency source from the GitHub tag rather than the hex package. Apologies to anyone who tried to use the atomvm_rebar3_plugin 0.7.4 release from hex.pm. There are no other changes or feature additions, just a working package this time ;-). - the AtomVM team</summary></entry><entry><title type="html">Updates available for AtomVM Erlang tools</title><link href="https://www.atomvm.net/2025/05/26/tooling-updates.html" rel="alternate" type="text/html" title="Updates available for AtomVM Erlang tools" /><published>2025-05-26T00:00:00+00:00</published><updated>2025-05-26T00:00:00+00:00</updated><id>https://www.atomvm.net/2025/05/26/tooling-updates</id><content type="html" xml:base="https://www.atomvm.net/2025/05/26/tooling-updates.html">&lt;h2 id=&quot;20250526-updates-available-for-atomvm_packbeam-and-atomvm_rebar3_plugin&quot;&gt;2025/05/26 Updates available for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_packbeam&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Updates for both &lt;a href=&quot;https://github.com/atomvm/atomvm_packbeam/releases/tag/0.7.4&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_packbeam&lt;/code&gt; 0.7.4&lt;/a&gt;
and &lt;a href=&quot;https://github.com/atomvm/atomvm_rebar3_plugin/releases/tag/0.7.4&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt; 0.7.4&lt;/a&gt;
are available from &lt;a href=&quot;https://hex.pm/packages?search=atomvm&amp;amp;sort=updated_at&quot;&gt;hex.pm&lt;/a&gt; and on GitHub.
The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_packbeam&lt;/code&gt; release brings support for OTP 28 to both tools. Numerous bugs have been
fixed in both tools. Full changelogs are linked in the respective release notes.&lt;/p&gt;

&lt;h3 id=&quot;enhancements-to-atomvm_rebar3_plugin&quot;&gt;Enhancements to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Add support for OTP application framework in AtomVM&lt;/li&gt;
  &lt;li&gt;Improved pico_flash task&lt;/li&gt;
  &lt;li&gt;Pack beams in test directory, for test profile&lt;/li&gt;
  &lt;li&gt;Add port “auto” config - that enables auto detect of port for esp32 platform&lt;/li&gt;
  &lt;li&gt;Replace uf2 creation code with upstream uf2tool&lt;/li&gt;
  &lt;li&gt;Allow relative path for –external AVMs in packbeam task&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed-in-atomvm_rebar3_plugin&quot;&gt;Bugs fixed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Fix broken external includes in rebar.conf&lt;/li&gt;
  &lt;li&gt;Fixed several instances of the app name not being set correctly in rebar3 new atomvm_app templates&lt;/li&gt;
  &lt;li&gt;Added some missing license info&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enhancements-to-atomvm_packbeam&quot;&gt;Enhancements to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_packbeam&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Support OTP-28 uncompressed literals&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed-in-atomvm_packbeam&quot;&gt;Bugs fixed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_packbeam&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Fix bug in packbeam create&lt;/li&gt;
  &lt;li&gt;Added some missing license info&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The AtomVM team&lt;/em&gt;&lt;/p&gt;</content><author><name>The AtomVM Team</name></author><summary type="html">2025/05/26 Updates available for atomvm_packbeam and atomvm_rebar3_plugin Updates for both atomvm_packbeam 0.7.4 and atomvm_rebar3_plugin 0.7.4 are available from hex.pm and on GitHub. The atomvm_packbeam release brings support for OTP 28 to both tools. Numerous bugs have been fixed in both tools. Full changelogs are linked in the respective release notes. Enhancements to atomvm_rebar3_plugin Add support for OTP application framework in AtomVM Improved pico_flash task Pack beams in test directory, for test profile Add port “auto” config - that enables auto detect of port for esp32 platform Replace uf2 creation code with upstream uf2tool Allow relative path for –external AVMs in packbeam task Bugs fixed in atomvm_rebar3_plugin Fix broken external includes in rebar.conf Fixed several instances of the app name not being set correctly in rebar3 new atomvm_app templates Added some missing license info Enhancements to atomvm_packbeam Support OTP-28 uncompressed literals Bugs fixed in atomvm_packbeam Fix bug in packbeam create Added some missing license info The AtomVM team</summary></entry><entry><title type="html">AtomVM v0.6.5 for MacOS</title><link href="https://www.atomvm.net/2024/10/15/AtomVM_v0.6.5_MacOS.html" rel="alternate" type="text/html" title="AtomVM v0.6.5 for MacOS" /><published>2024-10-15T00:00:00+00:00</published><updated>2024-10-15T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/10/15/AtomVM_v0.6.5_MacOS</id><content type="html" xml:base="https://www.atomvm.net/2024/10/15/AtomVM_v0.6.5_MacOS.html">&lt;h2 id=&quot;20241015-atomvm-v065-macos-update-options&quot;&gt;2024/10/15 AtomVM v0.6.5 MacOS update options&lt;/h2&gt;

&lt;p&gt;Updates for MacOS through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macports&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebrew&lt;/code&gt; are now available for AtomVM v0.6.5. For first time installation see the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/getting-started-guide.html#installation-on-macos&quot;&gt;MacOS installation section&lt;/a&gt; of the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/getting-started-guide.html&quot;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To upgrade a previously tapped &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebrew&lt;/code&gt;  install use:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew update
$ brew upgrade atomvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To upgrade an install from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macports&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo port selfupdate
$ sudo port upgrade outdated
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For all the details about the AtomVM v0.6.5 release see the &lt;a href=&quot;https://www.atomvm.net/2024/10/14/Release_v0.6.5.html&quot;&gt;release announcement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.5 release of the AtomVM virtual machine, including a
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/getting-started-guide.html&quot;&gt;Getting Started Guide&lt;/a&gt;, can be found in the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/&quot;&gt;AtomVM Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To help get you inspired there are examples ready to use with our &lt;a href=&quot;https://github.com/atomvm/ExAtomVM&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExAtomVM mix&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/atomvm_rebar3_plugin&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt;&lt;/a&gt; standard tool plugins in the &lt;a href=&quot;https://github.com/atomvm/atomvm_examples&quot;&gt;AtomVM examples repository&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating and maintaining such a
fine work of software, to &lt;a href=&quot;https://github.com/pguyot&quot;&gt;Paul Guyot&lt;/a&gt; for maintaining the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macports&lt;/code&gt; release, and to &lt;a href=&quot;https://github.com/petermm&quot;&gt;Peter Madsen-Mygdal&lt;/a&gt; for maintaining the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebrew tap&lt;/code&gt;, along with all of their other contributions ;-)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The AtomVM team&lt;/em&gt;&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/10/15 AtomVM v0.6.5 MacOS update options Updates for MacOS through macports and homebrew are now available for AtomVM v0.6.5. For first time installation see the MacOS installation section of the Getting Started Guide. To upgrade a previously tapped homebrew install use: $ brew update $ brew upgrade atomvm To upgrade an install from macports $ sudo port selfupdate $ sudo port upgrade outdated For all the details about the AtomVM v0.6.5 release see the release announcement. Documentation for the v0.6.5 release of the AtomVM virtual machine, including a Getting Started Guide, can be found in the AtomVM Documentation. To help get you inspired there are examples ready to use with our ExAtomVM mix and atomvm_rebar3_plugin standard tool plugins in the AtomVM examples repository on GitHub. Many thanks go to Davide Bettio, for creating and maintaining such a fine work of software, to Paul Guyot for maintaining the macports release, and to Peter Madsen-Mygdal for maintaining the homebrew tap, along with all of their other contributions ;-) The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.5</title><link href="https://www.atomvm.net/2024/10/14/Release_v0.6.5.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.5" /><published>2024-10-14T00:00:00+00:00</published><updated>2024-10-14T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/10/14/Release_v0.6.5</id><content type="html" xml:base="https://www.atomvm.net/2024/10/14/Release_v0.6.5.html">&lt;h2 id=&quot;20241014-announcing-atomvm-v065&quot;&gt;2024/10/14 Announcing AtomVM v0.6.5&lt;/h2&gt;

&lt;p&gt;We are pleased to announce the release of v0.6.5 of the AtomVM virtual machine!&lt;/p&gt;

&lt;p&gt;First and foremost our apologies to ESP32 users wanting to use all the great new Elixir features added in the V0.6.4 release. The binary images were corrupted and may Elixir features were unavailable. We have fixed the problem and now publish an Elixir flavored image that has a larger library partition. This change necessitates changing the application partition offset to 0x250000. The &lt;a href=&quot;https://github.com/atomvm/exatomvm&quot;&gt;ExAtomVM &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mix&lt;/code&gt;&lt;/a&gt; plugin repository has already been updated with the correct default offset, a new release should be available in the very near future.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: We are investigating &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues/1324&quot;&gt;a bug&lt;/a&gt; in the ESP32 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i2c&lt;/code&gt; driver, that was reported hours before this release, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i2c:write_bytes&lt;/code&gt; on ESP32 seems to be causing a hard fault, as a workaround use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i2c:write_byte&lt;/code&gt; instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Expanded Erlang support includes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:atom_to_binary/1&lt;/code&gt; that is equivalent to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:atom_to_binary(Atom, utf8)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is_bitstring/1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maps:merge_with/3&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:keytake/3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:last/1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:mapfoldl/3&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:nthtail/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;support for handle_continue callback in gen_server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gen_server:start_monitor/3,4&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code:ensure_loaded/1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io_lib:latin1_char_list/1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io:put_chars/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:list_to_integer/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary_to_integer/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary:copy/1,2&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary:split/3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary:decode_hex/1&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary:encode_hex/1,2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string:find/2,3&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Support for directory listing using POSIX APIs: (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm:posix_opendir/1&lt;/code&gt;,
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm:posix_readdir/1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm:posix_closedir/1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Expanded Elixir support features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String.Chars&lt;/code&gt; protocol, now functions such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enum.join&lt;/code&gt; are able to take
also non string parameters; e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enum.join([1, 2], &quot;,&quot;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enumerable&lt;/code&gt; protocol&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Process.send/2&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Process.send_after/3/4&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Process.cancel_timer/1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;List.Chars&lt;/code&gt; protocol&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;List.duplicate/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword.split/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IO.chardata_to_string/1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Base.decode16/2&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Base.encode16/2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enum.find_index&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enum.find_value&lt;/code&gt; support Enumerable and not just lists&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enhancements to the ESP32 platform:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The ESP32 platform now includes the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/apidocs/erlang/eavmlib/esp_adc.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp_adc&lt;/code&gt;&lt;/a&gt; driver module for using the ADC peripheral to measure analog voltages. Building from source, and including the atomvm_adc component is no longer necessary (or even supported, now that ESP-IDF v4.4.x has been deprecated).&lt;/li&gt;
  &lt;li&gt;Support for mounting/unmounting storage on ESP32 (such as SD or internal flash) using
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp:mount/4&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp:umount/1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Made the device_config properties list in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spi:open/1&lt;/code&gt; optional (defaults to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;), so you can use the function with only a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bus_config&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The network driver supports a callback for beacon lost events (usually encountered when signal quality is poor or network congestion), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network:stop/0&lt;/code&gt; works as expected.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many bugs have been fixed in addition to the previously mentioned fix for ESP32 images, including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fixed memory corruption in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unicode:characters_to_binary&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Fixed handling of large literal indexes and large extended literal indexes&lt;/li&gt;
  &lt;li&gt;Fixed bogus out_of_memory error when using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unicode:characters_to_list&lt;/code&gt; on some platforms such as ESP32&lt;/li&gt;
  &lt;li&gt;Fix crash in Elixir library when doing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inspect(:atom)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;General &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inspect()&lt;/code&gt; compliance with Elixir behavior (but there are still some minor differences)&lt;/li&gt;
  &lt;li&gt;On ESP32 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uart:open/1,2&lt;/code&gt; now works with uppercase peripheral names&lt;/li&gt;
  &lt;li&gt;Several edge case memory bugs were fixed in the ESP32 network driver, ans when stopped all resources are freed.&lt;/li&gt;
  &lt;li&gt;Fixed a bug in decoding terms that led to some pin numbers being rejected when setting GPIO interrupts on the ESP32 platform.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions consult the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32, are available from
&lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.5&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as
well as anyone needing to build a generic_unix port for a device without release binaries should
consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;. MacOS
users also have the option of
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/getting-started-guide.html#installation-on-macos&quot;&gt;installing with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macports&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our
&lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.5 release of the AtomVM virtual machine, including a
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/getting-started-guide.html&quot;&gt;Getting Started Guide&lt;/a&gt;, can be found in the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.5/&quot;&gt;AtomVM Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the
&lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating and maintaining such a
fine work of software. Special thanks to first time contributors &lt;a href=&quot;https://github.com/aiotter&quot;&gt;Yuto Oguchi&lt;/a&gt;, &lt;a href=&quot;https://github.com/rafaltrojniak&quot;&gt;Rafał Trójniak&lt;/a&gt;, &lt;a href=&quot;https://github.com/jakub-gonet&quot;&gt;Jakub Gonet&lt;/a&gt;, and &lt;a href=&quot;https://github.com/kevinschweikert&quot;&gt;Kevin Schweikert&lt;/a&gt;, as well as the rest of the &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;bug reporters&lt;/a&gt; who have helped make this release possible.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The AtomVM team&lt;/em&gt;&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/10/14 Announcing AtomVM v0.6.5 We are pleased to announce the release of v0.6.5 of the AtomVM virtual machine! First and foremost our apologies to ESP32 users wanting to use all the great new Elixir features added in the V0.6.4 release. The binary images were corrupted and may Elixir features were unavailable. We have fixed the problem and now publish an Elixir flavored image that has a larger library partition. This change necessitates changing the application partition offset to 0x250000. The ExAtomVM mix plugin repository has already been updated with the correct default offset, a new release should be available in the very near future. Note: We are investigating a bug in the ESP32 i2c driver, that was reported hours before this release, i2c:write_bytes on ESP32 seems to be causing a hard fault, as a workaround use i2c:write_byte instead. Expanded Erlang support includes: erlang:atom_to_binary/1 that is equivalent to erlang:atom_to_binary(Atom, utf8) is_bitstring/1 maps:merge_with/3 lists:keytake/3, lists:last/1, lists:mapfoldl/3, and lists:nthtail/2 support for handle_continue callback in gen_server gen_server:start_monitor/3,4 code:ensure_loaded/1 io_lib:latin1_char_list/1 io:put_chars/2 erlang:list_to_integer/2 binary_to_integer/2 binary:copy/1,2, binary:split/3, binary:decode_hex/1, and binary:encode_hex/1,2 string:find/2,3 Support for directory listing using POSIX APIs: (atomvm:posix_opendir/1, atomvm:posix_readdir/1, atomvm:posix_closedir/1) Expanded Elixir support features: String.Chars protocol, now functions such as Enum.join are able to take also non string parameters; e.g. Enum.join([1, 2], &quot;,&quot;) Enumerable protocol Process.send/2, Process.send_after/3/4, and Process.cancel_timer/1 List.Chars protocol List.duplicate/2 Keyword.split/2 IO.chardata_to_string/1 Base.decode16/2 and Base.encode16/2 Enum.find_index and Enum.find_value support Enumerable and not just lists Enhancements to the ESP32 platform: The ESP32 platform now includes the esp_adc driver module for using the ADC peripheral to measure analog voltages. Building from source, and including the atomvm_adc component is no longer necessary (or even supported, now that ESP-IDF v4.4.x has been deprecated). Support for mounting/unmounting storage on ESP32 (such as SD or internal flash) using esp:mount/4 and esp:umount/1 Made the device_config properties list in spi:open/1 optional (defaults to []), so you can use the function with only a bus_config The network driver supports a callback for beacon lost events (usually encountered when signal quality is poor or network congestion), network:stop/0 works as expected. Many bugs have been fixed in addition to the previously mentioned fix for ESP32 images, including: Fixed memory corruption in unicode:characters_to_binary Fixed handling of large literal indexes and large extended literal indexes Fixed bogus out_of_memory error when using unicode:characters_to_list on some platforms such as ESP32 Fix crash in Elixir library when doing inspect(:atom) General inspect() compliance with Elixir behavior (but there are still some minor differences) On ESP32 uart:open/1,2 now works with uppercase peripheral names Several edge case memory bugs were fixed in the ESP32 network driver, ans when stopped all resources are freed. Fixed a bug in decoding terms that led to some pin numbers being rejected when setting GPIO interrupts on the ESP32 platform. For the full set of bug fixes, changes and additions consult the Changelog. Download images and binaries are available for most platforms, except STM32, are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. MacOS users also have the option of installing with macports. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.5 release of the AtomVM virtual machine, including a Getting Started Guide, can be found in the AtomVM Documentation. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating and maintaining such a fine work of software. Special thanks to first time contributors Yuto Oguchi, Rafał Trójniak, Jakub Gonet, and Kevin Schweikert, as well as the rest of the contributors and bug reporters who have helped make this release possible. The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.4</title><link href="https://www.atomvm.net/2024/08/18/Release_v0.6.4.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.4" /><published>2024-08-18T00:00:00+00:00</published><updated>2024-08-18T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/08/18/Release_v0.6.4</id><content type="html" xml:base="https://www.atomvm.net/2024/08/18/Release_v0.6.4.html">&lt;h2 id=&quot;20240818-announcing-atomvm-v064&quot;&gt;2024/08/18 Announcing AtomVM v0.6.4&lt;/h2&gt;

&lt;p&gt;We are pleased to announce the release of v0.6.4 of the AtomVM virtual machine!&lt;/p&gt;

&lt;p&gt;This release greatly enhances support for Elixir language programming. Many Elixir modules and functions have been added:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Implement missing opcode 161 (raw_raise), that looks more likely to be generated with Elixir code&lt;/li&gt;
  &lt;li&gt;Support for Elixir Kernel:
    &lt;ul&gt;
      &lt;li&gt;Kernel.struct and Kernel.struct!&lt;/li&gt;
      &lt;li&gt;Kernel.min and Kernel.max&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MapSet module&lt;/li&gt;
  &lt;li&gt;Range module&lt;/li&gt;
  &lt;li&gt;Enum functions: split_with, join, map_join, into, reverse, slice and to_list&lt;/li&gt;
  &lt;li&gt;Map.replace/3 and Map.replace!/3&lt;/li&gt;
  &lt;li&gt;IO.iodata_to_binary/1&lt;/li&gt;
  &lt;li&gt;Support for Elixir Enumerable and Collectable protocol&lt;/li&gt;
  &lt;li&gt;Support for Elixir exceptions: Exception module and the other error related modules such as ArgumentError, UndefinedFunctionError, etc…&lt;/li&gt;
  &lt;li&gt;Support (as stub) for erlang:error/3 (that is required from Elixir code)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The ESP32 platform now implements &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.4/apidocs/erlang/eavmlib/gpio.html#init-1&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpio:init/1&lt;/code&gt;&lt;/a&gt;, which was previously only used (and required) on the rp2040 platform. This function is used to initialize pins for GPIO usage, which some pins require depending on default function and bootloader code.&lt;/p&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions consult the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.4/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32, are available from
&lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.4&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as
well as anyone needing to build a generic_unix port for a device without release binaries should
consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.4/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;. MacOS
users also have the option of
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.4/getting-started-guide.html#installation-on-macos&quot;&gt;installing with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macports&lt;/code&gt;&lt;/a&gt;,
and an updated HomeBrew tap should be available in the near future.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our
&lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.4 release of the AtomVM virtual machine, including a
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.4/getting-started-guide.html&quot;&gt;Getting Started Guide&lt;/a&gt;, can be found in the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.4/&quot;&gt;AtomVM Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the
&lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating and maintaining such a
fine work of software, as well as the &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;bug reporters&lt;/a&gt; who have helped make this release possible.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The AtomVM team&lt;/em&gt;&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/08/18 Announcing AtomVM v0.6.4 We are pleased to announce the release of v0.6.4 of the AtomVM virtual machine! This release greatly enhances support for Elixir language programming. Many Elixir modules and functions have been added: Implement missing opcode 161 (raw_raise), that looks more likely to be generated with Elixir code Support for Elixir Kernel: Kernel.struct and Kernel.struct! Kernel.min and Kernel.max MapSet module Range module Enum functions: split_with, join, map_join, into, reverse, slice and to_list Map.replace/3 and Map.replace!/3 IO.iodata_to_binary/1 Support for Elixir Enumerable and Collectable protocol Support for Elixir exceptions: Exception module and the other error related modules such as ArgumentError, UndefinedFunctionError, etc… Support (as stub) for erlang:error/3 (that is required from Elixir code) The ESP32 platform now implements gpio:init/1, which was previously only used (and required) on the rp2040 platform. This function is used to initialize pins for GPIO usage, which some pins require depending on default function and bootloader code. For the full set of bug fixes, changes and additions consult the Changelog. Download images and binaries are available for most platforms, except STM32, are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. MacOS users also have the option of installing with macports, and an updated HomeBrew tap should be available in the near future. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.4 release of the AtomVM virtual machine, including a Getting Started Guide, can be found in the AtomVM Documentation. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating and maintaining such a fine work of software, as well as the contributors and bug reporters who have helped make this release possible. The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.3</title><link href="https://www.atomvm.net/2024/07/22/Release_v0.6.3.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.3" /><published>2024-07-22T00:00:00+00:00</published><updated>2024-07-22T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/07/22/Release_v0.6.3</id><content type="html" xml:base="https://www.atomvm.net/2024/07/22/Release_v0.6.3.html">&lt;h2 id=&quot;20240722-announcing-atomvm-v063&quot;&gt;2024/07/22 Announcing AtomVM v0.6.3&lt;/h2&gt;

&lt;p&gt;We are pleased to announce the release of v0.6.3 of the AtomVM virtual machine!&lt;/p&gt;

&lt;p&gt;This release expands OTP coverage to include the Erlang &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sets&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;queue&lt;/code&gt; modules and several
Elixir &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword&lt;/code&gt; functions: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword.merge&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword.take&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword.pop(!)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword.keyword?&lt;/code&gt;,
and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyword.has_key?&lt;/code&gt;. Support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~kp&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io_lib:format/2&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maps:iterator/2&lt;/code&gt; that were
introduced with OTP26 have added, along with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maps:from_keys/2&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists&lt;/code&gt; modules gains support
for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:keytake/3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:keystore/4&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:filtermap/2&lt;/code&gt;. Support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:size/1&lt;/code&gt; and
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:apply/2&lt;/code&gt; has also been added.&lt;/p&gt;

&lt;p&gt;A simple &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/apidocs/erlang/eavmlib/ahttp_client.html&quot;&gt;http client&lt;/a&gt;,
that can be used for different use cases, such as downloading OTA updates has been added to
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/apidocs/erlang/eavmlib/README.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eavmlib&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/network-programming-guide.html#ap-mode&quot;&gt;channel used in access point mode&lt;/a&gt;
can now be changed in the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/apidocs/erlang/eavmlib/network.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network&lt;/code&gt;&lt;/a&gt; driver.&lt;/p&gt;

&lt;p&gt;This release adds support for &lt;a href=&quot;https://www.espressif.com/en/products/socs/esp32-h2&quot;&gt;ESP32-H2&lt;/a&gt;
devices. Support has also been added for USB serial output on ESP32 devices with native USB support
(ESP32-S2 for example).&lt;/p&gt;

&lt;p&gt;Notable changes include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the default size of ESP32 RTC slow memory being bumped from 4086 to 4096, except on ESP32-H2
where it’s 3072 bytes&lt;/li&gt;
  &lt;li&gt;updates to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte_size/1&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bit_size/1&lt;/code&gt; to implement OTP27 match context reuse optimization
OTP-18987&lt;/li&gt;
  &lt;li&gt;ESP32 network driver messages for event 40 (home channel change events) are now suppressed,
but the details for the channel changes can be observed in the console log if “debug” level
logging is enabled in ESP-IDF Kconfig options.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Several bugs have been fixed, including the creation of multiple links for the same process and
links not being removed at trapped exits. A bug affecting binary pattern matching (for builds with
OTP-21) has been fixed, and several memory related bugs have been corrected, as well as a bug that
could yield crashes when functions are sent in messages. The error that is raised when a function
is undefined has also been fixed.&lt;/p&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions consult the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32, are available from
&lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.3&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as
well as anyone needing to build a generic_unix port for a device without release binaries should
consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;. MacOS
users also have the option of
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/getting-started-guide.html#installation-on-macos&quot;&gt;installing with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macports&lt;/code&gt;&lt;/a&gt;,
and an updated HomeBrew tap should be available in the near future. The “tap” is currently out of date, but a fix
has already been submitted.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our
&lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.3 release of the AtomVM virtual machine, including a
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/getting-started-guide.html&quot;&gt;Getting Started Guide&lt;/a&gt;, can be found in the
&lt;a href=&quot;https://www.atomvm.net/doc/v0.6.3/&quot;&gt;AtomVM Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the
&lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating and maintaining such a
fine work of software. Special thanks also to &lt;a href=&quot;https://github.com/takasehideki&quot;&gt;takasehideki&lt;/a&gt; and
&lt;a href=&quot;https://github.com/karlsson&quot;&gt;Mikael Karlsson&lt;/a&gt; for their first contributions to the project, along
with the rest of the  &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and
&lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;testers who have helped make this release possible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The AtomVM team&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/07/22 Announcing AtomVM v0.6.3 We are pleased to announce the release of v0.6.3 of the AtomVM virtual machine! This release expands OTP coverage to include the Erlang sets and queue modules and several Elixir Keyword functions: Keyword.merge, Keyword.take, Keyword.pop(!), Keyword.keyword?, and Keyword.has_key?. Support for ~kp with io_lib:format/2 and maps:iterator/2 that were introduced with OTP26 have added, along with maps:from_keys/2. The lists modules gains support for lists:keytake/3, lists:keystore/4, and lists:filtermap/2. Support for erlang:size/1 and erlang:apply/2 has also been added. A simple http client, that can be used for different use cases, such as downloading OTA updates has been added to eavmlib. The channel used in access point mode can now be changed in the network driver. This release adds support for ESP32-H2 devices. Support has also been added for USB serial output on ESP32 devices with native USB support (ESP32-S2 for example). Notable changes include: the default size of ESP32 RTC slow memory being bumped from 4086 to 4096, except on ESP32-H2 where it’s 3072 bytes updates to byte_size/1 and bit_size/1 to implement OTP27 match context reuse optimization OTP-18987 ESP32 network driver messages for event 40 (home channel change events) are now suppressed, but the details for the channel changes can be observed in the console log if “debug” level logging is enabled in ESP-IDF Kconfig options. Several bugs have been fixed, including the creation of multiple links for the same process and links not being removed at trapped exits. A bug affecting binary pattern matching (for builds with OTP-21) has been fixed, and several memory related bugs have been corrected, as well as a bug that could yield crashes when functions are sent in messages. The error that is raised when a function is undefined has also been fixed. For the full set of bug fixes, changes and additions consult the Changelog. Download images and binaries are available for most platforms, except STM32, are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. MacOS users also have the option of installing with macports, and an updated HomeBrew tap should be available in the near future. The “tap” is currently out of date, but a fix has already been submitted. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.3 release of the AtomVM virtual machine, including a Getting Started Guide, can be found in the AtomVM Documentation. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating and maintaining such a fine work of software. Special thanks also to takasehideki and Mikael Karlsson for their first contributions to the project, along with the rest of the contributors and testers who have helped make this release possible. The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.2</title><link href="https://www.atomvm.net/2024/05/29/Release_v0.6.2.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.2" /><published>2024-05-29T00:00:00+00:00</published><updated>2024-05-29T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/05/29/Release_v0.6.2</id><content type="html" xml:base="https://www.atomvm.net/2024/05/29/Release_v0.6.2.html">&lt;h2 id=&quot;20240529-announcing-atomvm-v062&quot;&gt;2024/05/29 Announcing AtomVM v0.6.2&lt;/h2&gt;

&lt;p&gt;We are pleased to announce the release of v0.6.2 of the AtomVM virtual machine!&lt;/p&gt;

&lt;p&gt;This release changes the ssl default from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{active, false}&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{active, true}&lt;/code&gt; in order to have same behavior as OTP, as well as fixing several ssl related bugs.  Stacktraces are now enabled by default on the rp2040 platform; so, like the ESP32, when a user application crashes a stacktrace will be emitted to make debugging applications easier.&lt;/p&gt;

&lt;p&gt;We have added support for the ESP32-C2, as well as DragonFly BSD on the generic_unix platform. Other additions include &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp:deep_sleep_enable_gpio_wakeup/2&lt;/code&gt; to allow wakeup from deep sleep for ESP32C3 and ESP32C6, as well as the ability for WiFi enabled devices to obtain the signal strength of the connection to an access point using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network:sta_rssi/0&lt;/code&gt;.  A number of new functions have been added to the proplists module, and guards &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is_even&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is_odd&lt;/code&gt; have been added to the Elixir Integer module.&lt;/p&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.2/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;, and check the &lt;a href=&quot;https://github.com/atomvm/AtomVM/blob/v0.6.2/UPDATING.md&quot;&gt;Updating Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32, are available from &lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.2&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.2/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our &lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.2 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.2/&quot;&gt;AtomVM Documentation page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the &lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating such a fine work of software, as well as the &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;testers who have helped make this release possible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The AtomVM team&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/05/29 Announcing AtomVM v0.6.2 We are pleased to announce the release of v0.6.2 of the AtomVM virtual machine! This release changes the ssl default from {active, false} to {active, true} in order to have same behavior as OTP, as well as fixing several ssl related bugs. Stacktraces are now enabled by default on the rp2040 platform; so, like the ESP32, when a user application crashes a stacktrace will be emitted to make debugging applications easier. We have added support for the ESP32-C2, as well as DragonFly BSD on the generic_unix platform. Other additions include esp:deep_sleep_enable_gpio_wakeup/2 to allow wakeup from deep sleep for ESP32C3 and ESP32C6, as well as the ability for WiFi enabled devices to obtain the signal strength of the connection to an access point using network:sta_rssi/0. A number of new functions have been added to the proplists module, and guards is_even and is_odd have been added to the Elixir Integer module. For the full set of bug fixes, changes and additions consult the Changelog, and check the Updating Instructions. Download images and binaries are available for most platforms, except STM32, are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.2 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the AtomVM Documentation page. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating such a fine work of software, as well as the contributors and testers who have helped make this release possible. The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.1</title><link href="https://www.atomvm.net/2024/05/06/Release_v0.6.1.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.1" /><published>2024-05-06T00:00:00+00:00</published><updated>2024-05-06T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/05/06/Release_v0.6.1</id><content type="html" xml:base="https://www.atomvm.net/2024/05/06/Release_v0.6.1.html">&lt;h2 id=&quot;20240506-announcing-atomvm-v061&quot;&gt;2024/05/06 Announcing AtomVM v0.6.1&lt;/h2&gt;

&lt;p&gt;We are pleased to announce the release of v0.6.1 of the AtomVM virtual machine!&lt;/p&gt;

&lt;p&gt;This is a small update that introduces a new experimental feature: an optimized GC mode. This mode uses C’s realloc instead of copying data around and can be enabled with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-DENABLE_REALLOC_GC=On&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;The other notable changes include several bug fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A crash on macOS has been addressed by adding a missing call to psa_crypto_init for TLS 1.3.&lt;/li&gt;
  &lt;li&gt;Functions such as fun m:f/a are now correctly displayed and converted to lists.&lt;/li&gt;
  &lt;li&gt;An issue where the unique integer was truncated on some 32-bit architectures has been fixed, particularly when using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:ref_to_list/1&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:display/1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.1/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;, and check the &lt;a href=&quot;https://github.com/atomvm/AtomVM/blob/v0.6.1/UPDATING.md&quot;&gt;Updating Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32, are available from &lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.1&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.1/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our &lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.1 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.1/&quot;&gt;AtomVM Documentation page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the &lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating such a fine work of software, as well as the &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;testers who have helped make this release possible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The AtomVM team&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/05/06 Announcing AtomVM v0.6.1 We are pleased to announce the release of v0.6.1 of the AtomVM virtual machine! This is a small update that introduces a new experimental feature: an optimized GC mode. This mode uses C’s realloc instead of copying data around and can be enabled with the -DENABLE_REALLOC_GC=On flag. The other notable changes include several bug fixes: A crash on macOS has been addressed by adding a missing call to psa_crypto_init for TLS 1.3. Functions such as fun m:f/a are now correctly displayed and converted to lists. An issue where the unique integer was truncated on some 32-bit architectures has been fixed, particularly when using erlang:ref_to_list/1 and erlang:display/1. For the full set of bug fixes, changes and additions consult the Changelog, and check the Updating Instructions. Download images and binaries are available for most platforms, except STM32, are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.1 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the AtomVM Documentation page. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating such a fine work of software, as well as the contributors and testers who have helped make this release possible. The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.0</title><link href="https://www.atomvm.net/2024/03/23/Release_v0.6.0.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.0" /><published>2024-03-23T00:00:00+00:00</published><updated>2024-03-23T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/03/23/Release_v0.6.0</id><content type="html" xml:base="https://www.atomvm.net/2024/03/23/Release_v0.6.0.html">&lt;h2 id=&quot;20240323-announcing-atomvm-v060&quot;&gt;2024/03/23 Announcing AtomVM v0.6.0&lt;/h2&gt;

&lt;p&gt;We missed announcing the last few beta and rc releases that all came in a flurry as we were busy doing tests on hardware and this announcement is actually late, but for anyone who missed it, we are pleased to announce that we have a new v0.6.0 stable release!&lt;/p&gt;

&lt;p&gt;In this release &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/apidocs/erlang/eavmlib/spi.html&quot;&gt;SPI&lt;/a&gt;, &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/apidocs/erlang/eavmlib/i2c.html&quot;&gt;I2C&lt;/a&gt;, and &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/apidocs/erlang/eavmlib/uart.html&quot;&gt;UART&lt;/a&gt; peripheral configurations have been changed, for details consult the documentation for these modules in the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/apidocs/erlang/eavmlib/README.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eavmlib&lt;/code&gt; documentation&lt;/a&gt;. There is now an ESP32 API for allowing coexistence of native and Erlang I2C drivers, for example, allowing the use of the native &lt;a href=&quot;https://github.com/atomvm/atomvm_ssd1306&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_ssd1306&lt;/code&gt; Display driver&lt;/a&gt;, with a pure erlang driver for the &lt;a href=&quot;https://github.com/atomvm/atomvm_examples/tree/master/erlang/i2c_example&quot;&gt;SHT3x temperature sensor&lt;/a&gt;. GPIO interrupt (currently only supported on ESP32 and STM32 platforms) messages can now be sent to a designated receiver using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpio:set_int/4&lt;/code&gt;. Support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:split/2&lt;/code&gt; has also been added. ESP32 platform now supports retrieving the device’s e-fuse MAC address with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp:get_default_mac/0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;AtomVM now uses UTF-8 encoding for atoms when using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:term_to_binary/1&lt;/code&gt;, in conformance with OTP-26, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary_to_atom/1&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atom_to_binary/1&lt;/code&gt; now default to utf8.  Support has been added for utf8 encoding to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*_to_atom&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atom_to_*&lt;/code&gt; functions.&lt;/p&gt;

&lt;p&gt;We have made improvements to the rp2040 platform that should make development workflows much smoother.  The device will now accept re-flashing a new application using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pico_flash&lt;/code&gt; task after the application has exited.  Previously the device would be unresponsive after exiting.  There is also a default 20 second timeout, which the device will wait for a USB console connection to be established, before running the application.  Previously our default build would start the application immediately, giving the user no time to connect to be able to see the output of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_world&lt;/code&gt; before the application exited, and the device became unresponsive.&lt;/p&gt;

&lt;p&gt;The port call tuple format has been changed to the same format as gen_server, so cast support can be added. This change means older versions of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvmlib&lt;/code&gt; will not work, libraries from latest version must be used. Check the &lt;a href=&quot;https://github.com/atomvm/AtomVM/blob/v0.6.0/UPDATING.md&quot;&gt;Update Instructions&lt;/a&gt; for other breaking changes for both BEAM application developers, as well as for contributors, and driver developers using nifs or ports.&lt;/p&gt;

&lt;p&gt;Under the hood enhancements feature a new atom table, which uses less memory, and has improved performance.&lt;/p&gt;

&lt;p&gt;Several memory related bugs have been fixed. A random number generation bug has been fixed on ESP32 and RPi2040, as well as a bug shared by both platforms that would cause invalid GPIO pull directions to be silently set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;floating&lt;/code&gt; without an error.&lt;/p&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;, and check the &lt;a href=&quot;https://github.com/atomvm/AtomVM/blob/v0.6.0/UPDATING.md&quot;&gt;Updating Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32 (and some generic_unix hosts for this release due to specific Mbed-TLS requirements) are available from &lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.0&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our &lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.0 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0/&quot;&gt;AtomVM Documentation page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the &lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating such a fine work of software, as well as the &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;testers who have helped make this release possible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The AtomVM team&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/03/23 Announcing AtomVM v0.6.0 We missed announcing the last few beta and rc releases that all came in a flurry as we were busy doing tests on hardware and this announcement is actually late, but for anyone who missed it, we are pleased to announce that we have a new v0.6.0 stable release! In this release SPI, I2C, and UART peripheral configurations have been changed, for details consult the documentation for these modules in the eavmlib documentation. There is now an ESP32 API for allowing coexistence of native and Erlang I2C drivers, for example, allowing the use of the native atomvm_ssd1306 Display driver, with a pure erlang driver for the SHT3x temperature sensor. GPIO interrupt (currently only supported on ESP32 and STM32 platforms) messages can now be sent to a designated receiver using gpio:set_int/4. Support for lists:split/2 has also been added. ESP32 platform now supports retrieving the device’s e-fuse MAC address with esp:get_default_mac/0. AtomVM now uses UTF-8 encoding for atoms when using erlang:term_to_binary/1, in conformance with OTP-26, and binary_to_atom/1 and atom_to_binary/1 now default to utf8. Support has been added for utf8 encoding to *_to_atom and atom_to_* functions. We have made improvements to the rp2040 platform that should make development workflows much smoother. The device will now accept re-flashing a new application using the atomvm_rebar3_plugin pico_flash task after the application has exited. Previously the device would be unresponsive after exiting. There is also a default 20 second timeout, which the device will wait for a USB console connection to be established, before running the application. Previously our default build would start the application immediately, giving the user no time to connect to be able to see the output of hello_world before the application exited, and the device became unresponsive. The port call tuple format has been changed to the same format as gen_server, so cast support can be added. This change means older versions of atomvmlib will not work, libraries from latest version must be used. Check the Update Instructions for other breaking changes for both BEAM application developers, as well as for contributors, and driver developers using nifs or ports. Under the hood enhancements feature a new atom table, which uses less memory, and has improved performance. Several memory related bugs have been fixed. A random number generation bug has been fixed on ESP32 and RPi2040, as well as a bug shared by both platforms that would cause invalid GPIO pull directions to be silently set to floating without an error. For the full set of bug fixes, changes and additions consult the Changelog, and check the Updating Instructions. Download images and binaries are available for most platforms, except STM32 (and some generic_unix hosts for this release due to specific Mbed-TLS requirements) are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.0 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the AtomVM Documentation page. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating such a fine work of software, as well as the contributors and testers who have helped make this release possible. The AtomVM team</summary></entry><entry><title type="html">Announcing AtomVM v0.6.0-beta.1 (Pre-release)</title><link href="https://www.atomvm.net/2024/02/29/Release_v0.6.0-beta.1.html" rel="alternate" type="text/html" title="Announcing AtomVM v0.6.0-beta.1 (Pre-release)" /><published>2024-02-29T00:00:00+00:00</published><updated>2024-02-29T00:00:00+00:00</updated><id>https://www.atomvm.net/2024/02/29/Release_v0.6.0-beta.1</id><content type="html" xml:base="https://www.atomvm.net/2024/02/29/Release_v0.6.0-beta.1.html">&lt;h2 id=&quot;20240229-announcing-atomvm-v060-beta1-pre-release&quot;&gt;2024/02/29 Announcing AtomVM v0.6.0-beta.1 (Pre-release)&lt;/h2&gt;

&lt;p&gt;We are pleased to announce that our pre-release of v0.6.0 is now in beta!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wait! What happened to the v0.6.0-beta.0 release?
Our all volunteer QA team (thank you @petermm) discovered a problem with the ESP32S3 builds that caused starting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp32init.beam&lt;/code&gt; to crash the VM. This is the default network application that will create a wireless AP on an ESP32 that has been flashed with the AtomVM image, but does not have a user application flashed yet. Once connected to the “AtomVM-ESP32” network that is created you can access an alisp console at 192.168.4.1 on port 2323, or connect to http port 8080 to change the network to station mode and connect to a wifi network, where the arepl console will be available on port 2323 on the devices acquired IP address. We have determined the cause of the problem, but it has not been fixed in this release.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this release &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/apidocs/erlang/eavmlib/spi.html&quot;&gt;SPI&lt;/a&gt;, &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/apidocs/erlang/eavmlib/i2c.html&quot;&gt;I2C&lt;/a&gt;, and &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/apidocs/erlang/eavmlib/uart.html&quot;&gt;UART&lt;/a&gt; peripheral configurations have been changed, for details consult the documentation for these modules in the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/apidocs/erlang/eavmlib/README.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eavmlib&lt;/code&gt; documentation&lt;/a&gt;. There is now an ESP32 API for allowing coexistence of native and Erlang I2C drivers, for example, allowing the use of the native &lt;a href=&quot;https://github.com/atomvm/atomvm_ssd1306&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_ssd1306&lt;/code&gt; Display driver&lt;/a&gt;, with a pure erlang driver for the &lt;a href=&quot;https://github.com/atomvm/atomvm_examples/tree/master/erlang/i2c_example&quot;&gt;SHT3x temperature sensor&lt;/a&gt;. GPIO interrupt (currently only supported on ESP32 and STM32 platforms) messages can now be sent to a designated receiver using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpio:set_int/4&lt;/code&gt;. Support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lists:split/2&lt;/code&gt; has also been added. ESP32 platform now supports retrieving the device’s e-fuse MAC address with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esp:get_default_mac/0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;AtomVM now uses UTF-8 encoding for atoms when using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;erlang:term_to_binary/1&lt;/code&gt;, in conformance with OTP-26, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binary_to_atom/1&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atom_to_binary/1&lt;/code&gt; now default to utf8.  Support has been added for utf8 encoding to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*_to_atom&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atom_to_*&lt;/code&gt; functions.&lt;/p&gt;

&lt;p&gt;We have made improvements to the rp2040 platform that should make development workflows much smoother.  The device will now accept re-flashing a new application using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvm_rebar3_plugin&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pico_flash&lt;/code&gt; task after the application has exited.  Previously the device would be unresponsive after exiting.  There is also a default 20 second timeout, which the device will wait for a USB console connection to be established, before running the application.  Previously our default build would start the application immediately, giving the user no time to connect to be able to see the output of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_world&lt;/code&gt; before the application exited, and the device became unresponsive.&lt;/p&gt;

&lt;p&gt;The port call tuple format has been changed to the same format as gen_server, so cast support can be added. This change means older versions of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomvmlib&lt;/code&gt; will not work, libraries from latest version must be used. Check the &lt;a href=&quot;https://github.com/atomvm/AtomVM/blob/v0.6.0-beta.1/UPDATING.md&quot;&gt;Update Instructions&lt;/a&gt; for other breaking changes for both BEAM application developers, as well as for contributors, and driver developers using nifs or ports.&lt;/p&gt;

&lt;p&gt;Under the hood enhancements feature a new atom table, which uses less memory, and has improved performance.&lt;/p&gt;

&lt;p&gt;Several memory related bugs have been fixed. A random number generation bug has been fixed on ESP32 and RPi2040, as well as a bug shared by both platforms that would cause invalid GPIO pull directions to be silently set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;floating&lt;/code&gt; without an error.&lt;/p&gt;

&lt;p&gt;For the full set of bug fixes, changes and additions since the v0.6.0-alpha.2 release consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/CHANGELOG.html&quot;&gt;Changelog&lt;/a&gt;, and check the &lt;a href=&quot;https://github.com/atomvm/AtomVM/blob/v0.6.0-beta.1/UPDATING.md&quot;&gt;Updating Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download images and binaries are available for most platforms, except STM32 (and some generic_unix hosts for this release due to specific Mbed-TLS requirements) are available from &lt;a href=&quot;https://github.com/atomvm/AtomVM/releases/tag/v0.6.0-beta.1&quot;&gt;AtomVM Releases on GitHub&lt;/a&gt;. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/build-instructions.html&quot;&gt;Build Instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The git repository and tarballs of the AtomVM source release for all platforms can be found on our &lt;a href=&quot;https://github.com/atomvm/AtomVM&quot;&gt;GitHub AtomVM page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Documentation for the v0.6.0-beta.1 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the &lt;a href=&quot;https://www.atomvm.net/doc/v0.6.0-beta.1/&quot;&gt;AtomVM Documentation page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, tools, drivers, and modules are available on the &lt;a href=&quot;https://github.com/atomvm&quot;&gt;GitHub AtomVM Project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many thanks go to &lt;a href=&quot;https://github.com/bettio&quot;&gt;Davide Bettio&lt;/a&gt;, for creating such a fine work of software, as well as the &lt;a href=&quot;https://github.com/atomvm/AtomVM/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/atomvm/AtomVM/issues&quot;&gt;testers who have helped make this release possible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The AtomVM team&lt;/p&gt;</content><author><name>atomvm.net</name></author><summary type="html">2024/02/29 Announcing AtomVM v0.6.0-beta.1 (Pre-release) We are pleased to announce that our pre-release of v0.6.0 is now in beta! Wait! What happened to the v0.6.0-beta.0 release? Our all volunteer QA team (thank you @petermm) discovered a problem with the ESP32S3 builds that caused starting esp32init.beam to crash the VM. This is the default network application that will create a wireless AP on an ESP32 that has been flashed with the AtomVM image, but does not have a user application flashed yet. Once connected to the “AtomVM-ESP32” network that is created you can access an alisp console at 192.168.4.1 on port 2323, or connect to http port 8080 to change the network to station mode and connect to a wifi network, where the arepl console will be available on port 2323 on the devices acquired IP address. We have determined the cause of the problem, but it has not been fixed in this release. In this release SPI, I2C, and UART peripheral configurations have been changed, for details consult the documentation for these modules in the eavmlib documentation. There is now an ESP32 API for allowing coexistence of native and Erlang I2C drivers, for example, allowing the use of the native atomvm_ssd1306 Display driver, with a pure erlang driver for the SHT3x temperature sensor. GPIO interrupt (currently only supported on ESP32 and STM32 platforms) messages can now be sent to a designated receiver using gpio:set_int/4. Support for lists:split/2 has also been added. ESP32 platform now supports retrieving the device’s e-fuse MAC address with esp:get_default_mac/0. AtomVM now uses UTF-8 encoding for atoms when using erlang:term_to_binary/1, in conformance with OTP-26, and binary_to_atom/1 and atom_to_binary/1 now default to utf8. Support has been added for utf8 encoding to *_to_atom and atom_to_* functions. We have made improvements to the rp2040 platform that should make development workflows much smoother. The device will now accept re-flashing a new application using the atomvm_rebar3_plugin pico_flash task after the application has exited. Previously the device would be unresponsive after exiting. There is also a default 20 second timeout, which the device will wait for a USB console connection to be established, before running the application. Previously our default build would start the application immediately, giving the user no time to connect to be able to see the output of hello_world before the application exited, and the device became unresponsive. The port call tuple format has been changed to the same format as gen_server, so cast support can be added. This change means older versions of atomvmlib will not work, libraries from latest version must be used. Check the Update Instructions for other breaking changes for both BEAM application developers, as well as for contributors, and driver developers using nifs or ports. Under the hood enhancements feature a new atom table, which uses less memory, and has improved performance. Several memory related bugs have been fixed. A random number generation bug has been fixed on ESP32 and RPi2040, as well as a bug shared by both platforms that would cause invalid GPIO pull directions to be silently set to floating without an error. For the full set of bug fixes, changes and additions since the v0.6.0-alpha.2 release consult the Changelog, and check the Updating Instructions. Download images and binaries are available for most platforms, except STM32 (and some generic_unix hosts for this release due to specific Mbed-TLS requirements) are available from AtomVM Releases on GitHub. STM32 users as well as anyone needing to build a generic_unix port for a device without release binaries should consult the Build Instructions. The git repository and tarballs of the AtomVM source release for all platforms can be found on our GitHub AtomVM page. Documentation for the v0.6.0-beta.1 pre-release of the AtomVM virtual machine, including a Getting Started Guide, can be found at the AtomVM Documentation page. As always, tools, drivers, and modules are available on the GitHub AtomVM Project page. Many thanks go to Davide Bettio, for creating such a fine work of software, as well as the contributors and testers who have helped make this release possible. The AtomVM team</summary></entry></feed>